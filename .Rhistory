row.marknames = 0,
NA.char = -9)
#Trim missingness
a = missingno(a, type = "loci", cutoff = 0.20)
a#trimmed to 20% missing data
#Convert allele frequences to matrix
alleles <- makefreq(a)
#Sample data
dat <- read.csv("./data/seal_data.csv",header=T,row.names=1)
xyz <- dat[,2:4]
###SPATIAL, CLIMATIC, AND TRAIT DATA
space <- as.matrix(read.csv("./data/seal_space.csv",header=T,row.names=1))
climate <- as.matrix(read.csv("./data/seal_climate.csv",header=T,row.names=1))
traits <- as.matrix(read.csv("./data/seal_traits.csv",header=T,row.names=1))
##################
###Kohonen maps###
##################
###Parameters for runs
#Size of Grid
g <- round(sqrt(5*sqrt(length(rownames(alleles)))))#common rule of thumb
#Create an output grid of size sqrt(n)
som_grid <- somgrid(xdim = g,
ydim = g,
topo="hexagonal",
neighbourhood.fct = "gaussian")
#Number of Replicates - can increase if you like
n <- 10
#Number of steps - doesn't usually matter beyond ~100
m <- 100
##############
###Run SOMs###
##############
res <- Trait.SOM()
#Plot Learning#
plotLearning.Traits(res)
#Layer Weights#
plotLayers(res)
#Optimize K#
plotK(res)
#Sample Map#
set.seed(1)
labels <- match.labels(alleles)#get DAPC labels
q_mat <- match.k(res,labels)#get admixture coefficients
par(mfrow=c(1,1),
mar=c(0,0,0,0))
xy <- xyz[,1:2]
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="white")
map.axes()
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="gray",add=T)
maps::map(database = 'state', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), add = T)
make.admix.pie.plot(q_mat,xy,layer.colors = k.cols,radii=2.5,add = T)
legend(-88,38,legend=c(expression(italic("D. cheaha")),
expression(italic("D. monticola"))),cex=2,pt.bg=k.cols[2:1],pch=21)
map.scale(-81.2,31.1)
#Structure Plot#
x <- q_mat[order(q_mat[,1]),]
z <- hclust(dist(x),"single")$order
make.structure.plot(admix.proportions = x[z,],
sample.names = rownames(x[z,]),
mar = c(8,4,2,2),
layer.colors = k.cols,
sort.by = 1)
#Example outputs from one model#
plotModel(res)
set.seed(2)
#################################################
#Data from Pyron et al. 2023, Systematic Biology#
#71 genetic  and 163 morphological specimens    #
#from 71 sites across the range of D. monticola #
#################################################
###MOLECULAR DATA
#Load the *.str file from PEA23
a <- read.structure("./data/seal_in_c90.str",
n.ind = 71,
n.loc = 7809,
onerowperind = FALSE,
col.lab = 1,
col.pop = 0,
col.others = 0,
row.marknames = 0,
NA.char = -9)
#Trim missingness
a = missingno(a, type = "loci", cutoff = 0.20)
a#trimmed to 20% missing data
#Convert allele frequences to matrix
alleles <- makefreq(a)
#Sample data
dat <- read.csv("./data/seal_data.csv",header=T,row.names=1)
xyz <- dat[,2:4]
###SPATIAL, CLIMATIC, AND TRAIT DATA
space <- as.matrix(read.csv("./data/seal_space.csv",header=T,row.names=1))
climate <- as.matrix(read.csv("./data/seal_climate.csv",header=T,row.names=1))
traits <- as.matrix(read.csv("./data/seal_traits.csv",header=T,row.names=1))
##################
###Kohonen maps###
##################
###Parameters for runs
#Size of Grid
g <- round(sqrt(5*sqrt(length(rownames(alleles)))))#common rule of thumb
#Create an output grid of size sqrt(n)
som_grid <- somgrid(xdim = g,
ydim = g,
topo="hexagonal",
neighbourhood.fct = "gaussian")
#Number of Replicates - can increase if you like
n <- 10
#Number of steps - doesn't usually matter beyond ~100
m <- 100
##############
###Run SOMs###
##############
res <- Trait.SOM()
#Plot Learning#
plotLearning.Traits(res)
#Layer Weights#
plotLayers(res)
#Optimize K#
plotK(res)
#Sample Map#
set.seed(1)
labels <- match.labels(alleles)#get DAPC labels
q_mat <- match.k(res,labels)#get admixture coefficients
par(mfrow=c(1,1),
mar=c(0,0,0,0))
xy <- xyz[,1:2]
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="white")
map.axes()
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="gray",add=T)
maps::map(database = 'state', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), add = T)
make.admix.pie.plot(q_mat,xy,layer.colors = k.cols,radii=2.5,add = T)
legend(-88,38,legend=c(expression(italic("D. cheaha")),
expression(italic("D. monticola"))),cex=2,pt.bg=k.cols[2:1],pch=21)
map.scale(-81.2,31.1)
#Structure Plot#
x <- q_mat[order(q_mat[,1]),]
z <- hclust(dist(x),"single")$order
make.structure.plot(admix.proportions = x[z,],
sample.names = rownames(x[z,]),
mar = c(8,4,2,2),
layer.colors = k.cols,
sort.by = 1)
#Example outputs from one model#
plotModel(res)
set.seed(3)
#################################################
#Data from Pyron et al. 2023, Systematic Biology#
#71 genetic  and 163 morphological specimens    #
#from 71 sites across the range of D. monticola #
#################################################
###MOLECULAR DATA
#Load the *.str file from PEA23
a <- read.structure("./data/seal_in_c90.str",
n.ind = 71,
n.loc = 7809,
onerowperind = FALSE,
col.lab = 1,
col.pop = 0,
col.others = 0,
row.marknames = 0,
NA.char = -9)
#Trim missingness
a = missingno(a, type = "loci", cutoff = 0.20)
a#trimmed to 20% missing data
#Convert allele frequences to matrix
alleles <- makefreq(a)
#Sample data
dat <- read.csv("./data/seal_data.csv",header=T,row.names=1)
xyz <- dat[,2:4]
###SPATIAL, CLIMATIC, AND TRAIT DATA
space <- as.matrix(read.csv("./data/seal_space.csv",header=T,row.names=1))
climate <- as.matrix(read.csv("./data/seal_climate.csv",header=T,row.names=1))
traits <- as.matrix(read.csv("./data/seal_traits.csv",header=T,row.names=1))
##################
###Kohonen maps###
##################
###Parameters for runs
#Size of Grid
g <- round(sqrt(5*sqrt(length(rownames(alleles)))))#common rule of thumb
#Create an output grid of size sqrt(n)
som_grid <- somgrid(xdim = g,
ydim = g,
topo="hexagonal",
neighbourhood.fct = "gaussian")
#Number of Replicates - can increase if you like
n <- 10
#Number of steps - doesn't usually matter beyond ~100
m <- 100
##############
###Run SOMs###
##############
res <- Trait.SOM()
#Plot Learning#
plotLearning.Traits(res)
#Layer Weights#
plotLayers(res)
#Optimize K#
plotK(res)
#Sample Map#
set.seed(1)
labels <- match.labels(alleles)#get DAPC labels
q_mat <- match.k(res,labels)#get admixture coefficients
par(mfrow=c(1,1),
mar=c(0,0,0,0))
xy <- xyz[,1:2]
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="white")
map.axes()
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="gray",add=T)
maps::map(database = 'state', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), add = T)
make.admix.pie.plot(q_mat,xy,layer.colors = k.cols,radii=2.5,add = T)
legend(-88,38,legend=c(expression(italic("D. cheaha")),
expression(italic("D. monticola"))),cex=2,pt.bg=k.cols[2:1],pch=21)
map.scale(-81.2,31.1)
#Structure Plot#
x <- q_mat[order(q_mat[,1]),]
z <- hclust(dist(x),"single")$order
make.structure.plot(admix.proportions = x[z,],
sample.names = rownames(x[z,]),
mar = c(8,4,2,2),
layer.colors = k.cols,
sort.by = 1)
#Example outputs from one model#
plotModel(res)
labels
set.seed(4)
#################################################
#Data from Pyron et al. 2023, Systematic Biology#
#71 genetic  and 163 morphological specimens    #
#from 71 sites across the range of D. monticola #
#################################################
###MOLECULAR DATA
#Load the *.str file from PEA23
a <- read.structure("./data/seal_in_c90.str",
n.ind = 71,
n.loc = 7809,
onerowperind = FALSE,
col.lab = 1,
col.pop = 0,
col.others = 0,
row.marknames = 0,
NA.char = -9)
#Trim missingness
a = missingno(a, type = "loci", cutoff = 0.20)
a#trimmed to 20% missing data
#Convert allele frequences to matrix
alleles <- makefreq(a)
#Sample data
dat <- read.csv("./data/seal_data.csv",header=T,row.names=1)
xyz <- dat[,2:4]
###SPATIAL, CLIMATIC, AND TRAIT DATA
space <- as.matrix(read.csv("./data/seal_space.csv",header=T,row.names=1))
climate <- as.matrix(read.csv("./data/seal_climate.csv",header=T,row.names=1))
traits <- as.matrix(read.csv("./data/seal_traits.csv",header=T,row.names=1))
##################
###Kohonen maps###
##################
###Parameters for runs
#Size of Grid
g <- round(sqrt(5*sqrt(length(rownames(alleles)))))#common rule of thumb
#Create an output grid of size sqrt(n)
som_grid <- somgrid(xdim = g,
ydim = g,
topo="hexagonal",
neighbourhood.fct = "gaussian")
#Number of Replicates - can increase if you like
n <- 3
#Number of steps - doesn't usually matter beyond ~100
m <- 100
##############
###Run SOMs###
##############
res <- Trait.SOM()
#Plot Learning#
plotLearning.Traits(res)
#Layer Weights#
plotLayers(res)
#Optimize K#
plotK(res)
#Sample Map#
set.seed(1)
labels <- match.labels(alleles)#get DAPC labels
q_mat <- match.k(res,labels)#get admixture coefficients
par(mfrow=c(1,1),
mar=c(0,0,0,0))
xy <- xyz[,1:2]
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="white")
map.axes()
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="gray",add=T)
maps::map(database = 'state', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), add = T)
make.admix.pie.plot(q_mat,xy,layer.colors = k.cols,radii=2.5,add = T)
legend(-88,38,legend=c(expression(italic("D. cheaha")),
expression(italic("D. monticola"))),cex=2,pt.bg=k.cols[2:1],pch=21)
map.scale(-81.2,31.1)
#Structure Plot#
x <- q_mat[order(q_mat[,1]),]
z <- hclust(dist(x),"single")$order
make.structure.plot(admix.proportions = x[z,],
sample.names = rownames(x[z,]),
mar = c(8,4,2,2),
layer.colors = k.cols,
sort.by = 1)
#Example outputs from one model#
plotModel(res)
set.seed(5)
#################################################
#Data from Pyron et al. 2023, Systematic Biology#
#71 genetic  and 163 morphological specimens    #
#from 71 sites across the range of D. monticola #
#################################################
###MOLECULAR DATA
#Load the *.str file from PEA23
a <- read.structure("./data/seal_in_c90.str",
n.ind = 71,
n.loc = 7809,
onerowperind = FALSE,
col.lab = 1,
col.pop = 0,
col.others = 0,
row.marknames = 0,
NA.char = -9)
#Trim missingness
a = missingno(a, type = "loci", cutoff = 0.20)
a#trimmed to 20% missing data
#Convert allele frequences to matrix
alleles <- makefreq(a)
#Sample data
dat <- read.csv("./data/seal_data.csv",header=T,row.names=1)
xyz <- dat[,2:4]
###SPATIAL, CLIMATIC, AND TRAIT DATA
space <- as.matrix(read.csv("./data/seal_space.csv",header=T,row.names=1))
climate <- as.matrix(read.csv("./data/seal_climate.csv",header=T,row.names=1))
traits <- as.matrix(read.csv("./data/seal_traits.csv",header=T,row.names=1))
##################
###Kohonen maps###
##################
###Parameters for runs
#Size of Grid
g <- round(sqrt(5*sqrt(length(rownames(alleles)))))#common rule of thumb
#Create an output grid of size sqrt(n)
som_grid <- somgrid(xdim = g,
ydim = g,
topo="hexagonal",
neighbourhood.fct = "gaussian")
#Number of Replicates - can increase if you like
n <- 3
#Number of steps - doesn't usually matter beyond ~100
m <- 100
##############
###Run SOMs###
##############
res <- Trait.SOM()
#Plot Learning#
plotLearning.Traits(res)
#Layer Weights#
plotLayers(res)
#Optimize K#
plotK(res)
#Sample Map#
set.seed(1)
labels <- match.labels(alleles)#get DAPC labels
q_mat <- match.k(res,labels)#get admixture coefficients
par(mfrow=c(1,1),
mar=c(0,0,0,0))
xy <- xyz[,1:2]
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="white")
map.axes()
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="gray",add=T)
maps::map(database = 'state', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), add = T)
make.admix.pie.plot(q_mat,xy,layer.colors = k.cols,radii=2.5,add = T)
legend(-88,38,legend=c(expression(italic("D. cheaha")),
expression(italic("D. monticola"))),cex=2,pt.bg=k.cols[2:1],pch=21)
map.scale(-81.2,31.1)
#Structure Plot#
x <- q_mat[order(q_mat[,1]),]
z <- hclust(dist(x),"single")$order
make.structure.plot(admix.proportions = x[z,],
sample.names = rownames(x[z,]),
mar = c(8,4,2,2),
layer.colors = k.cols,
sort.by = 1)
#Example outputs from one model#
plotModel(res)
#Sample Map#
set.seed(1)
labels <- match.labels(alleles)#get DAPC labels
q_mat <- match.k(res,labels)#get admixture coefficients
par(mfrow=c(1,1),
mar=c(0,0,0,0))
xy <- xyz[,1:2]
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="white")
map.axes()
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="gray",add=T)
maps::map(database = 'state', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), add = T)
make.admix.pie.plot(q_mat,xy,layer.colors = k.cols,radii=2.5,add = T)
legend(-88,38,legend=c(expression(italic("D. cheaha")),
expression(italic("D. monticola"))),cex=2,pt.bg=k.cols[2:1],pch=21)
map.scale(-81.2,31.1)
#Structure Plot#
x <- q_mat[order(q_mat[,1]),]
z <- hclust(dist(x),"single")$order
make.structure.plot(admix.proportions = x[z,],
sample.names = rownames(x[z,]),
mar = c(8,4,2,2),
layer.colors = k.cols,
sort.by = 1)
#Example outputs from one model#
plotModel(res)
#Sample Map#
set.seed(2)
labels <- match.labels(alleles)#get DAPC labels
q_mat <- match.k(res,labels)#get admixture coefficients
par(mfrow=c(1,1),
mar=c(0,0,0,0))
xy <- xyz[,1:2]
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="white")
map.axes()
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="gray",add=T)
maps::map(database = 'state', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), add = T)
make.admix.pie.plot(q_mat,xy,layer.colors = k.cols,radii=2.5,add = T)
legend(-88,38,legend=c(expression(italic("D. cheaha")),
expression(italic("D. monticola"))),cex=2,pt.bg=k.cols[2:1],pch=21)
map.scale(-81.2,31.1)
#Structure Plot#
x <- q_mat[order(q_mat[,1]),]
z <- hclust(dist(x),"single")$order
make.structure.plot(admix.proportions = x[z,],
sample.names = rownames(x[z,]),
mar = c(8,4,2,2),
layer.colors = k.cols,
sort.by = 1)
#Example outputs from one model#
plotModel(res)
##########################################
source("./R/kohonen_code.R")
set.seed(1)
#################################################
#Data from Pyron et al. 2023, Systematic Biology#
#71 genetic  and 163 morphological specimens    #
#from 71 sites across the range of D. monticola #
#################################################
###MOLECULAR DATA
#Load the *.str file from PEA23
a <- read.structure("./data/seal_in_c90.str",
n.ind = 71,
n.loc = 7809,
onerowperind = FALSE,
col.lab = 1,
col.pop = 0,
col.others = 0,
row.marknames = 0,
NA.char = -9)
#Trim missingness
a = missingno(a, type = "loci", cutoff = 0.20)
a#trimmed to 20% missing data
#Convert allele frequences to matrix
alleles <- makefreq(a)
#Sample data
dat <- read.csv("./data/seal_data.csv",header=T,row.names=1)
xyz <- dat[,2:4]
###SPATIAL, CLIMATIC, AND TRAIT DATA
space <- as.matrix(read.csv("./data/seal_space.csv",header=T,row.names=1))
climate <- as.matrix(read.csv("./data/seal_climate.csv",header=T,row.names=1))
traits <- as.matrix(read.csv("./data/seal_traits.csv",header=T,row.names=1))
##################
###Kohonen maps###
##################
###Parameters for runs
#Size of Grid
g <- round(sqrt(5*sqrt(length(rownames(alleles)))))#common rule of thumb
#Create an output grid of size sqrt(n)
som_grid <- somgrid(xdim = g,
ydim = g,
topo="hexagonal",
neighbourhood.fct = "gaussian")
#Number of Replicates - can increase if you like
n <- 10
#Number of steps - doesn't usually matter beyond ~100
m <- 100
##############
###Run SOMs###
##############
res <- Trait.SOM()
#Plot Learning#
plotLearning.Traits(res)
#Layer Weights#
plotLayers(res)
#Optimize K#
plotK(res)
#Sample Map#
set.seed(2)
labels <- match.labels(alleles)#get DAPC labels
q_mat <- match.k(res,labels)#get admixture coefficients
par(mfrow=c(1,1),
mar=c(0,0,0,0))
xy <- xyz[,1:2]
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="white")
map.axes()
maps::map(database = 'county', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), col="gray",add=T)
maps::map(database = 'state', xlim = range(xy[,1]) + c(-0.5,0.5), ylim = range(xy[,2]) + c(-0.5,0.5), add = T)
make.admix.pie.plot(q_mat,xy,layer.colors = k.cols,radii=2.5,add = T)
legend(-88,38,legend=c(expression(italic("D. cheaha")),
expression(italic("D. monticola"))),cex=2,pt.bg=k.cols[2:1],pch=21)
map.scale(-81.2,31.1)
#Structure Plot#
x <- q_mat[order(q_mat[,1]),]
z <- hclust(dist(x),"single")$order
make.structure.plot(admix.proportions = x[z,],
sample.names = rownames(x[z,]),
mar = c(8,4,2,2),
layer.colors = k.cols,
sort.by = 1)
#Example outputs from one model#
plotModel(res)
